{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/datatable/datatable.component.css","webpack:///./src/app/datatable/datatable.component.html","webpack:///./src/app/datatable/datatable.component.ts","webpack:///./src/app/form-detail/form-detail.component.css","webpack:///./src/app/form-detail/form-detail.component.html","webpack:///./src/app/form-detail/form-detail.component.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/kickstarter-routing.module.ts","webpack:///./src/app/mock-http/mock-http.component.css","webpack:///./src/app/mock-http/mock-http.component.html","webpack:///./src/app/mock-http/mock-http.component.ts","webpack:///./src/app/service/InMemoryMockService.service.ts","webpack:///./src/app/service/kickstarter.service.ts","webpack:///./src/app/shared/footer/footer.component.css","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/gridlayout/gridlayout.component.css","webpack:///./src/app/shared/gridlayout/gridlayout.component.html","webpack:///./src/app/shared/gridlayout/gridlayout.component.ts","webpack:///./src/app/shared/navbar/navbar.component.css","webpack:///./src/app/shared/navbar/navbar.component.html","webpack:///./src/app/shared/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { AppComponent } from './app.component';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { GridlayoutComponent } from './shared/gridlayout/gridlayout.component';\nimport { FormComponent } from './form/form.component';\nimport { KickstarterRoutingModule } from './/kickstarter-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormDetailComponent } from './form-detail/form-detail.component';\nimport { InMemoryMockService } from './service/InMemoryMockService.service';\nimport { MockHttpComponent } from './mock-http/mock-http.component';\nimport { DatatableComponent } from './datatable/datatable.component';\nimport { AgGridModule } from 'ag-grid-angular';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    GridlayoutComponent,\n    FormComponent,\n    FormDetailComponent,\n    MockHttpComponent,\n    DatatableComponent\n  ],\n  imports: [\n    BrowserModule,\n    KickstarterRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryMockService, { dataEncapsulation: false }\n    ),\n    [AgGridModule.withComponents(null)]\n  ],\n  exports: [KickstarterRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<ag-grid-angular class=\\\"ag-theme-material\\\" [rowData]=\\\"rowData\\\" [columnDefs]=\\\"columnDefs\\\">\\n</ag-grid-angular>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-datatable',\n  templateUrl: './datatable.component.html',\n  styleUrls: ['./datatable.component.css']\n})\nexport class DatatableComponent implements OnInit {\n  columnDefs = [\n    { headerName: 'Make', field: 'make' },\n    { headerName: 'Model', field: 'model' },\n    { headerName: 'Price', field: 'price' },\n    { headerName: 'Make', field: 'make' },\n    { headerName: 'Model', field: 'model' },\n    { headerName: 'Price', field: 'price' },\n    { headerName: 'Price', field: 'price' }\n  ];\n\n  rowData = [\n    { make: 'Toyota', model: 'Celica', price: 35000 },\n    { make: 'Ford', model: 'Mondeo', price: 32000 },\n    { make: 'Audi', model: 'R8', price: 32000 },\n    { make: 'BMW', model: 'X6', price: 72000 },\n    { make: 'KIA', model: 'ken', price: 35000 },\n    { make: 'Suzuki', model: 'Swift', price: 32000 },\n    { make: 'Benz', model: 'c-class', price: 72000 }\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card-img {\\n  width: 150px;\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  margin-top: 30px;\\n}\\n\\n.card-container {\\n  padding: 50px\\n}\\n\\n.card-body-button {\\n  padding-left: 220px;\\n}\\n\\n.card {\\n  margin-bottom: 80px;\\n}\\n\"","module.exports = \"<div class=\\\"container card-container\\\">\\n  <div class=\\\"card\\\">\\n    <img class=\\\"card-img-top card-img\\\" src=\\\"../.././assets/checked.png\\\" alt=\\\"Card image cap\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">SUCCESS</h5>\\n      <p class=\\\"card-text\\\">Your details are saved successfully</p>\\n    </div>\\n    <ul class=\\\"list-group list-group-flush\\\">\\n      <li class=\\\"list-group-item\\\">{{name}}</li>\\n      <li class=\\\"list-group-item\\\">{{email}}</li>\\n      <li class=\\\"list-group-item\\\">{{address}}</li>\\n    </ul>\\n    <div class=\\\"card-body\\\">\\n      <a href=\\\"\\\" class=\\\"card-link card-body-button\\\">Go Back to Home</a>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-form-detail',\n  templateUrl: './form-detail.component.html',\n  styleUrls: ['./form-detail.component.css']\n})\nexport class FormDetailComponent implements OnInit {\n  name;\n  email;\n  address;\n  constructor(private route: ActivatedRoute) {\n    this.route.queryParams.subscribe(params => {\n      this.name = params['name'];\n      this.email = params['email'];\n      this.address = params['address'];\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".submit-form {\\n  background-color: #33b5e5;\\n  border: 2px solid #f5f5f5;\\n}\\n\\n.card {\\n  margin-bottom: 80px !important;\\n}\\n\"","module.exports = \"<div class=\\\"card text-white bg-info m-4\\\">\\n  <div class=\\\"card-header\\\">Reactive Forms</div>\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"formGroup\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"inputName\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputName\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitClicked && formControl.name.errors }\\\"\\n            placeholder=\\\"Enter Your Name\\\">\\n          <small id=\\\"nameHelp\\\" class=\\\"form-text text-light\\\">\\n            Your name must contain both your first and last name\\n          </small>\\n          <div *ngIf=\\\"formSubmitClicked && formControl.name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"formControl.name.errors.required\\\">Name is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"inputEmail\\\">Email</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitClicked && formControl.email.errors }\\\"\\n            placeholder=\\\"Enter Valid Email Address\\\">\\n          <small id=\\\"nameHelp\\\" class=\\\"form-text text-light\\\">\\n            Your email must be valid to process your login details\\n          </small>\\n          <div *ngIf=\\\"formSubmitClicked && formControl.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"formControl.email.errors.required\\\">Email is required</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputAddress\\\">Address</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" formControlName=\\\"address\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitClicked && formControl.address.errors }\\\"\\n          placeholder=\\\"Enter Your Address\\\">\\n        <small id=\\\"nameHelp\\\" class=\\\"form-text text-light\\\">\\n          Your address must be complete\\n        </small>\\n        <div *ngIf=\\\"formSubmitClicked && formControl.address.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"formControl.address.errors.required\\\">Address is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"inputCity\\\">City</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\" formControlName=\\\"city\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitClicked && formControl.city.errors }\\\"\\n            placeholder=\\\"Enter Your City\\\">\\n          <div *ngIf=\\\"formSubmitClicked && formControl.city.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"formControl.city.errors.required\\\">City is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-md-4\\\">\\n          <label for=\\\"inputState\\\">State</label>\\n          <select id=\\\"inputState\\\" class=\\\"form-control\\\" formControlName=\\\"state\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitClicked && formControl.state.errors }\\\">\\n            <option selected>Choose Your State</option>\\n            <option>State1</option>\\n            <option>State2</option>\\n            <option>State3</option>\\n            <option>State4</option>\\n            <option>State5</option>\\n          </select>\\n          <div *ngIf=\\\"formSubmitClicked && formControl.state.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"formControl.state.errors.required\\\">State is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-md-2\\\">\\n          <label for=\\\"inputPincode\\\">Pincode</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPincode\\\" formControlName=\\\"pincode\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitClicked && formControl.pincode.errors }\\\">\\n          <div *ngIf=\\\"formSubmitClicked && formControl.pincode.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"formControl.pincode.errors.required\\\">Pincode is required</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"gridCheck\\\" formControlName=\\\"terms\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitClicked && formControl.terms.errors }\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"gridCheck\\\">\\n            Add your Terms & Conditions to Agree\\n          </label>\\n          <div *ngIf=\\\"formSubmitClicked && formControl.terms.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"formControl.terms.errors.required\\\">Please check the Terms & Conditions to submit</div>\\n          </div>\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn submit-form text-white\\\" (click)=\\\"submitForm()\\\">Submit</button>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  formGroup: FormGroup;\n  formSubmitClicked = false;\n  formControl: any;\n\n  constructor(private formBuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      pincode: ['', Validators.required],\n      state: ['', Validators.required],\n      terms: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n    });\n    this.formControl = this.formGroup.controls;\n  }\n\n  submitForm() {\n    this.formSubmitClicked = true;\n    if (this.formGroup.invalid) {\n      return;\n    }\n    const navigationExtras: NavigationExtras = {\n      queryParams: {\n        'name': this.formGroup.value.name,\n        'email': this.formGroup.value.email,\n        'address': this.formGroup.value.address\n      }\n    };\n\n    this.router.navigate(['/form-submit'], navigationExtras);\n  }\n}\n","import { DatatableComponent } from './datatable/datatable.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormComponent } from './form/form.component';\nimport { GridlayoutComponent } from './shared/gridlayout/gridlayout.component';\nimport { FormDetailComponent } from './form-detail/form-detail.component';\nimport { MockHttpComponent } from './mock-http/mock-http.component';\n\nconst routes: Routes = [\n  { path: '', component: GridlayoutComponent, pathMatch: 'full' },\n  { path: 'forms', component: FormComponent },\n  { path: 'form-submit', component: FormDetailComponent },\n  { path: 'mock-http', component: MockHttpComponent },\n  { path: 'data-table', component: DatatableComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class KickstarterRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card text-white bg-info m-4\\\">\\n  <div class=\\\"card-header\\\">Test http methods with mock data</div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark text-white\\\" (click)=\\\"getData()\\\">GET</button>\\n        <div class=\\\"d-flex m-3\\\" *ngFor=\\\"let data of mockData; let i = index\\\">\\n          <small class=\\\"col-4\\\">{{mockData[i].name}}</small>\\n          <small class=\\\"col-3\\\">{{mockData[i].gender}}</small>\\n          <small class=\\\"col-5\\\">{{mockData[i].phone}}</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark text-white\\\" (click)=\\\"insertData(name.value,gender.value,phone.value)\\\">POST</button>\\n        <div class=\\\"m-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputName\\\" placeholder=\\\"Enter name\\\" #name>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGender\\\" placeholder=\\\"Enter gender\\\" #gender>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPhone\\\" placeholder=\\\"Enter phone number\\\" #phone>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { MockData } from './../service/mockData';\nimport { KickStarterService } from './../service/kickstarter.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mock-http',\n  templateUrl: './mock-http.component.html',\n  styleUrls: ['./mock-http.component.css']\n})\nexport class MockHttpComponent implements OnInit {\n\n  mockData: any[];\n  constructor(private kickStarterService: KickStarterService) { }\n\n  ngOnInit() {\n  }\n  getData() {\n    this.kickStarterService.getData().subscribe(res => { this.mockData = res as MockData[]; });\n    console.log(this.mockData);\n  }\n  insertData(name, gender, phone) {\n    const insertableMockData: MockData = { name, gender, phone };\n    this.kickStarterService.insertData(insertableMockData).subscribe(mockdata => {\n      this.mockData.push(mockdata);\n    });\n  }\n\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nexport class InMemoryMockService implements InMemoryDbService {\n    createDb() {\n        const sampleJSON = [\n            {\n                'name': 'Dunlap Hubbard',\n                'gender': 'male',\n                'phone': '+1 (890) 543-2508',\n            },\n            {\n                'name': 'Kirsten Sellers',\n                'gender': 'female',\n                'phone': '+1 (831) 564-2190',\n            },\n            {\n                'name': 'Acosta Robbins',\n                'gender': 'male',\n                'phone': '+1 (882) 441-3367',\n            }\n        ];\n        return { sampleJSON };\n    }\n}\n","import { MockData } from './mockData';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class KickStarterService {\n\n    private api = 'api/sampleJSON';  // URL to web api\n\n    constructor(\n        private http: HttpClient) { }\n\n    getData() {\n        return this.http.get(this.api);\n    }\n\n    insertData(mockData: MockData) {\n        console.log(mockData);\n        return this.http.post<MockData>(this.api, mockData, httpOptions);\n    }\n}\n","module.exports = \".footer {\\n  position: fixed;\\n  bottom: 0;\\n  width: 100%;\\n  height: 60px;\\n  background-color: #33b5e5;\\n}\\n\\n.footer-text {\\n  text-align: center;\\n  padding-top: 15px;\\n}\\n\"","module.exports = \"<footer class=\\\"text-white footer\\\">\\n  <div>\\n    <p class=\\\"footer-text\\\">Custom Footer</p>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".grid {\\n  padding: 30px;\\n}\\n\\n.grid-item {\\n  background-image: linear-gradient(141deg, #9fb8ad -5%, #1fc8db 50%, #2cb5e8 100%);\\n  height: 200px;\\n  width: 100px;\\n  margin: 5px;\\n  text-align: center;\\n  color: white;\\n  font-weight: bold;\\n  font-size: 25px;\\n  padding: 20px;\\n  border-radius: 40px;\\n}\\n\\n.grid-item-title {\\n  justify-content: center\\n}\\n\\n.grid-item-icon {\\n  width: 90px;\\n}\\n\\n.link {\\n  color: white;\\n}\\n\\n.grid-row {\\n  margin-left: -90px;\\n  margin-right: -90px;\\n}\\n\"","module.exports = \"<div class=\\\"container grid\\\">\\n  <div class=\\\"row grid-row\\\">\\n    <div class=\\\"col grid-item\\\">\\n      <div class=\\\"d-flex grid-item-title\\\">\\n        <a class=\\\"link\\\" [routerLink]=\\\"['/forms']\\\">Forms </a>\\n      </div>\\n      <img class=\\\"grid-item-icon\\\" src=\\\"../../../assets/text-field.png\\\">\\n    </div>\\n    <div class=\\\"col grid-item\\\">\\n      <div class=\\\"d-flex grid-item-title\\\">\\n        <a class=\\\"link\\\" [routerLink]=\\\"['/mock-http']\\\">Mocking Http Services</a>\\n      </div>\\n      <img class=\\\"grid-item-icon\\\" src=\\\"../../../assets/http.png\\\">\\n    </div>\\n    <div class=\\\"col grid-item\\\">\\n      <div class=\\\"d-flex grid-item-title\\\">\\n        <a class=\\\"link\\\" [routerLink]=\\\"['/data-table']\\\">Using third party components</a>\\n      </div>\\n      <img class=\\\"grid-item-icon\\\" src=\\\"../../../assets/data-table.png\\\">\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gridlayout',\n  templateUrl: './gridlayout.component.html',\n  styleUrls: ['./gridlayout.component.css']\n})\nexport class GridlayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".nav-bgcolor {\\n  background-color: #33b5e5;\\n}\\n\\n.glyphicon-menu-hamburger {\\n  font-size: npx;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-expand-lg navbar-dark nav-bgcolor\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n    <span class=\\\"glyphicon glyphicon-menu-hamburger\\\"></span>\\n    KickStarter (BootStrap)\\n  </a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggleNavbar()\\\">\\n    <span class=\\\" navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" [ngClass]=\\\"{ 'show': navbarOpen }\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Menu Option1</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Menu Option2</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <!-- <form class=\\\"form-inline\\\">\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n    <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n  </form> -->\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  navbarOpen = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleNavbar() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}